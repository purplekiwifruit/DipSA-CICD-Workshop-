name: my first workflow

on:
  push:
    branches:
      - "release/v[0-9]+.[0-9]+"

jobs:

  my-first-job-security-scan:
    if: "!contains(github.event.head_commit.message, '#NORUN')"
    
    runs-on: ubuntu-latest

    steps:
      - name: checkout source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
    
      - name: Run Trivy vulnerability scanner in repo mode
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '1'
          output: 'trivy-results.txt'
          severity: 'HIGH'

      - name: Upload Trivy scan results
        if: failure()
        uses: actions/upload-artifact@v2
        with: 
          name: trivy-results
          path: trivy-results.txt

  my-second-job-build-docker-image:
    needs: my-first-job-security-scan
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v4
        with:
            ref: ${{ github.base_ref }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-fortune:${{ github.sha }}
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ secrets.DOCKERHUB_USERNAME }}/go-fortune:${{ github.sha }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }} 

      - name: Send notification to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Image Build and Signed",
              "attachments": [
                {
                  "color": "#36A64F",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.actor }}",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Ref:*\nrefs/heads/v1.0"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Event:*\npush"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Actions URL:*\n<${{ github.event.head_commit.url }}|Build and Push>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.shortHead.outputs.sha_short }}>"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Image build and signed*\n*Name:* CAO LEILEI\n*Matriculation Number:* A0291659M\n*Email:* caoleilei0810@gmail.com\n*Repository:* <https://github.com/${{ github.repository }}>\n*Docker Hub URL:* <https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/go-fortune>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  
  my-third-job-report-vulnerability:
    needs: my-first-job-security-scan
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Download Trivey results
        uses: actions/download-artifact@v2
        with:
            name: trivy-results

      - name: Display Trivey results
        run: cat trivy-results.txt
      
      - name: Get short HEAD
        id: shortHead
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Send Vulnerability Report to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Build and Push",
              "attachments": [
                {
                  "color": "#FF0000",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.actor }}",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Ref:*\nrefs/heads/v1.0"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Event:*\npush"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Actions URL:*\n<https://github.com/purplekiwifruit/DipSA-CICD-Workshop-/actions|Build and Push>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit:*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.shortHead.outputs.sha_short }}>"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Scan failed - Leilei*\nFailed trivy scan, see uploaded report"
                      }
                    }
                  ]
                }
              ]
            }
      
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Upload file to Slack workflow
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-results.txt'
          initial_comment: 'Scan report by Leilei'
      
  
  # To-Do Tasks: 
    # 1.commit to test-submission channel to check Slack Message Format
    # a. Update value of secrets.SLACK_WEBHOOK_URL with test-submission webhook link
    # b. Update value of secrets.SLACK_TOKEN with the token value provide by Lecturer
    # c. update value of secrets.SLACK_CHANNEL_ID with test-submission channel id

    # 2. run 2 rounds of trivy scan
    #  a.  set --> severity: 'HIGH'  for failure case
    #  b.  set --> severity: 'CRITICAL'  for success case

